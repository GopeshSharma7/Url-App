apiVersion: v1
data:
  release: 
kind: Secret
metadata:
  creationTimestamp: "2023-10-26T04:58:03Z"
  labels:
    modifiedAt: "1698296283"
    name: kube-backups
    owner: helm
    status: deployed
    version: "1"
  name: sh.helm.release.v1.kube-backups.v1
  namespace: default
type: helm.sh/release.v1
